{"ast":null,"code":"var _jsxFileName = \"/Volumes/Disk D/My Documents/iOS Development/Bitbucket/SOLIDITY/frontend/src/App.js\";\nimport React, { useState } from 'react';\nimport { Drizzle } from '@drizzle/store';\nimport { drizzleReactHooks } from '@drizzle/react-plugin'; // набор хуков\n\nimport drizzleOptions from './store/DrizzleOptions';\nimport Loading from './components/loading/Loading'; // импортируем загрузку\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drizzle = new Drizzle(drizzleOptions); // создаем инстанс и передаем drizzleOptions, выступает контекстом\n\nconst {\n  DrizzleProvider\n} = drizzleReactHooks; // получаем провайдер DrizzleProvider\n\nfunction App() {\n  return (\n    /*#__PURE__*/\n    // передаем инстанс drizzle в DrizzleProvider == все что внутри тегов будет иметь доступ к drizzle store (контрактам и тд)\n    _jsxDEV(DrizzleProvider, {\n      drizzle: drizzle,\n      children: /*#__PURE__*/_jsxDEV(Loading, {\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/Disk D/My Documents/iOS Development/Bitbucket/SOLIDITY/frontend/src/App.js"],"names":["React","useState","Drizzle","drizzleReactHooks","drizzleOptions","Loading","drizzle","DrizzleProvider","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC,C,CAA0D;;AAC1D,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,OAAOC,OAAP,MAAoB,8BAApB,C,CAAmD;;;AAEnD,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,CAAYE,cAAZ,CAAhB,C,CAA4C;;AAC5C,MAAM;AAAEG,EAAAA;AAAF,IAAsBJ,iBAA5B,C,CAA+C;;AAE/C,SAASK,GAAT,GAAe;AAEb;AAAA;AACE;AACA,YAAC,eAAD;AAAiB,MAAA,OAAO,EAAEF,OAA1B;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAQD;;KAVQE,G;AAYT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Drizzle } from '@drizzle/store'\nimport { drizzleReactHooks } from '@drizzle/react-plugin' // набор хуков\nimport drizzleOptions from './store/DrizzleOptions'\n\nimport Loading from './components/loading/Loading' // импортируем загрузку\n\nconst drizzle = new Drizzle(drizzleOptions) // создаем инстанс и передаем drizzleOptions, выступает контекстом\nconst { DrizzleProvider } = drizzleReactHooks; // получаем провайдер DrizzleProvider\n\nfunction App() {\n\n  return (\n    // передаем инстанс drizzle в DrizzleProvider == все что внутри тегов будет иметь доступ к drizzle store (контрактам и тд)\n    <DrizzleProvider drizzle={drizzle}> \n      <Loading>\n        test\n      </Loading>\n    </DrizzleProvider>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}